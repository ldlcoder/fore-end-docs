(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{207:function(s,t,v){"use strict";v.r(t);var _=v(0),a=Object(_.a)({},(function(){var s=this,t=s.$createElement,v=s._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[v("p",[s._v("本节主要介绍目前工作中得到比较好实践效果的一些规范。其他未提到部分之后遇到后，经过相应验证亦可采纳")]),s._v(" "),v("h2",{attrs:{id:"编码规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#编码规范"}},[s._v("#")]),s._v(" 编码规范")]),s._v(" "),v("h3",{attrs:{id:"缩进"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缩进"}},[s._v("#")]),s._v(" 缩进")]),s._v(" "),v("p",[s._v("目前主流规范是使用2个空格。无论是在html，css，js中均是。")]),s._v(" "),v("p",[s._v("主流编辑器都支持设置缩减，规范配置是空格数为2，tab键用空格代替。")]),s._v(" "),v("p",[s._v("优点：")]),s._v(" "),v("ul",[v("li",[s._v("系统兼容性好，tab键在不同系统中表现不一致，容易造成文件内容排版错乱问题，而空格不会。")]),s._v(" "),v("li",[s._v("缩进距离变短，多层结构时不会出现一行只能写很少内容就会换行的情况")])]),s._v(" "),v("h3",{attrs:{id:"css-scss"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#css-scss"}},[s._v("#")]),s._v(" css/scss")]),s._v(" "),v("ul",[v("li",[s._v("类名用"),v("code",[s._v("-")]),s._v("分割，不要使用驼峰写法。理由：在js里写css类是很痛苦的事情（当然有很多人这么做，大佬总能找到大佬的理由），我们需要的是高效和人性化。")]),s._v(" "),v("li",[s._v("类名后空一格，起始大括号接在类名后面；属性名：后空一格；每条属性占一行。")]),s._v(" "),v("li",[s._v("组件最外层dom添加一个唯一的css类，组件内的css类均在这个命名空间之下。理由：防止样式污染")])]),s._v(" "),v("h3",{attrs:{id:"js"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[s._v("#")]),s._v(" js")]),s._v(" "),v("p",[s._v("js的规范多种多样，不同框架，不同环境下均不一样。除了一部分通用的规则，其他均依据各领域的规范/最佳实践的eslint配置。")]),s._v(" "),v("p",[s._v("通用规则如下：")]),s._v(" "),v("ul",[v("li",[s._v("函数大括号和名称同一行，不用新起一行")]),s._v(" "),v("li",[s._v("可变变量用let，不修改变量用const，尽量用const")]),s._v(" "),v("li",[s._v("代码段过长需要拆分成函数")]),s._v(" "),v("li",[s._v("if嵌套层级不应超过3层。可以利用return减少层级")]),s._v(" "),v("li",[s._v("多用ES6新的api函数，减少代码量")]),s._v(" "),v("li",[s._v("3元运算符可减少代码量。&&和||可减少控制流程代码")])]),s._v(" "),v("h3",{attrs:{id:"vue"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[s._v("#")]),s._v(" vue")]),s._v(" "),v("p",[s._v("vue的规范完全按照vue的standard eslint规则。使用脚手架创建项目时可选。无论使用哪个标准，至少需要保证90%代码符合eslint检验。")]),s._v(" "),v("h2",{attrs:{id:"接口规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#接口规范"}},[s._v("#")]),s._v(" 接口规范")]),s._v(" "),v("h3",{attrs:{id:"接口定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#接口定义"}},[s._v("#")]),s._v(" 接口定义")]),s._v(" "),v("p",[s._v("接口定义需要保持严谨，易懂，可扩展的原则。")]),s._v(" "),v("p",[s._v("接口可大致分为json格式接口和其他接口（比如文件流下载）")]),s._v(" "),v("p",[s._v("json格式接口需要有最外层规范定义，无论时传统模式还是restful模式。")]),s._v(" "),v("p",[s._v("数据层面需要有规范的类型（js虽然时弱类型语言，但工程化项目其实更需要强类型），枚举字段需要写明可能出现的情况。动态字段需要提供示例来描述结构。")]),s._v(" "),v("h3",{attrs:{id:"接口处理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#接口处理"}},[s._v("#")]),s._v(" 接口处理")]),s._v(" "),v("p",[s._v("接口的统一处理应该结合ui的设计进行统一，比如报错的提示方案，操作结果的提示方案等。项目和项目间不要求一致，但项目内最好保持风格统一。")]),s._v(" "),v("h2",{attrs:{id:"ui规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ui规范"}},[s._v("#")]),s._v(" UI规范")]),s._v(" "),v("p",[s._v("页面需要按照设计给出的图进行。优先级最高的是UI给出的整项目规范，如果图与规范产生冲突，需和ui沟通修改图，然后按图实现。")])])}),[],!1,null,null,null);t.default=a.exports}}]);